Virtuozzo 7 Installation Using PXE
==================================
:doctype: book

Introduction
------------

This guide provides information on installing Virtuozzo 7 over a network using a PXE (Preboot Execution Environment) server. You will also learn how to upgrade your existing system to Virtuozzo 7 over a network.

You can install Virtuozzo in a PXE environment using one of the following ways:

* *Manual installation*. When performing this kind of installation, you are asked questions by the Virtuozzo installer and define the necessary installation and configuration settings. Manual installation is recommended if you plan to install the product on a small number of physical servers.
* *Unattended installation*. In this kind of installation, the Virtuozzo installer uses a kickstart file to determine the necessary installation and configuration settings. Unattended installation assumes that no interaction is required on your part and is recommended if you plan to install the product on a multitude of physical servers.

To install Virtuozzo 7 over a network, you need to complete the following steps:

[options="compact"]
. Prepare for installation from a PXE server.
. Create a kickstart file. This step is only required if you plan to automate the procedure of deploying Virtuozzo on your servers.
. Install Virtuozzo.

All these steps are explained in the following chapters in detail.

Preparing for PXE Installation
------------------------------

The process of preparing for installation over network with a PXE server includes the following steps:

[options="compact"]
. Choosing servers for the PXE installation.
. Installing the necessary software on the PXE server.
. Configuring the TFTP server.
. Setting up a DHCP server.
. Setting up an HTTP server.
. Configuring the Virtuozzo server.

All these steps are described below in detail.

Choosing Servers
~~~~~~~~~~~~~~~~

First, you should decide on the servers to participate in the PXE installation. You need these servers:

* *PXE server*. This is a server allowing your servers to boot and install Virtuozzo over the network. Any server capable of running a Linux operating system and having a network interface card (NIC) can play the role of a PXE server.
* *DHCP server*. This is a standard DHCP server serving computers on your network with the necessary TCP/IP settings. You can use an existing DHCP server, if you have one, or set up a DHCP server from scratch. In the latter case, you can install it on the PXE server or use a dedicated server.
* *Virtuozzo server*. This is a server running Virtuozzo. The server must meet the requirements described in the *Preparing for Installation* chapter of the _Virtuozzo 7 Installation Guide_. In addition to the requirements listed in this chapter, the server must have a NIC with PXE support to be able to boot from the PXE server.
* *HTTP or FTP server*. This is a server storing the Virtuozzo installation files. You can use an existing HTTP server, if you have one, or set up an HTTP server from scratch. In the latter case, you can install it on the PXE server or use a dedicated server.

This guide assumes that you will store the installation files on an HTTP server and use HTTP as the installation protocol.

Installing Software on the PXE Server
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Next, you are supposed to install the necessary software on the PXE server. First of all, you need to install a Linux operating system on the server. There are no specific requirements for which operating system to use, so you can choose any (e.g., CentOS 6 or Fedora 17).

Once your system is up and running, install the following packages:

[options="compact"]
* `tftp-server`
* `httpd` (Install this package only if you plan to deploy the PXE and HTTP servers on the same physical server.)
* `syslinux`
* `dhcp` (Install this package only if you plan to deploy the PXE and DHCP servers on the same physical server.)

Assuming that your PXE server is running an RHEL-like operating system, you can use the `yum` utility to install the packages:

[subs="quotes"]
----
*# yum install tftp-server dhcp httpd syslinux*
----

Configuring the TFTP Server
~~~~~~~~~~~~~~~~~~~~~~~~~~~

In the next step, you need to configure the TFTP server that you installed in the previous step. This section describes the process of configuring the TFTP server for BIOS-based systems. For information on how to configure the TFTP server for installing Virtuozzo on EFI-based systems, see *Configuring for EFI* in the _Red Hat Enterprise Linux Installation Guide_ at https://access.redhat.com/knowledge/docs/en-US/Red_Hat_Enterprise_Linux/6/html/Installation_Guide/s1-netboot-pxe-config-efi.html.

To configure the TFTP server:

. On the PXE server, open the `/etc/xinetd.d/tftp` file, and edit it as follows:
+
[subs="quotes"]
----
service tftp
{
disable		= no
socket_type	= dgram
protocol	= udp
wait		= yes
user		= root
server		= /usr/sbin/in.tftpd
server_args	= -v -s /tftpboot
per_source	= 11
cps		= 100 2
flags		= IPv4
}
----
+
Once you are done, save the file.

. Copy the following files to the `/tftpboot` directory (if this directory does not exist, create it under the root (`/`) directory):
+
--
[options="compact"]
* `vmlinuz`
* `initrd.img`
* `menu.c32`
* `pxelinux.0`
--
+
These files are necessary to start the installation of Virtuozzo. You can find the first two files in the `/isolinux` directory of the Virtuozzo distribution. The `menu.c32` and `pxelinux.0` files are located in the `syslinux` installation directory on the PXE server (usually, this is the `/usr/share/syslinux` or `/usr/lib/syslinux` directory).

. Create the `/tftpboot/pxelinux.cfg` directory, and inside this directory, make the `default` file.
. Open the default file for editing, and add the following strings to it:
+
[subs="quotes"]
----
default menu.c32
prompt 0
timeout 100
ontimeout PCS
menu title Virtuozzo Boot Menu
label PCS
        menu label Install Virtuozzo Cloud Server
        kernel vmlinuz
        append initrd=initrd.img ksdevice=eth0
----
+
For detailed information on the parameters you can specify in the `/tftpboot/pxelinux.cfg/default` file and their configuration, see the documentation for `syslinux` and its man pages.

. Restart the `xinetd` service:
+
[subs="quotes"]
----
*# /etc/init.d/xinetd restart*
----

. If necessary, configure your firewall on the PXE server to allow access to the TFTP server.

[NOTE]
[subs="quotes"]
====
*Note:* When running the TFTP server, you might get the "*Permission denied*" error. In this case, you may try to fix the problem by running the following command on the server: +*# restorecon -Rv /tftboot/*+.
====

Setting Up a DHCP Server
~~~~~~~~~~~~~~~~~~~~~~~~

Now you can proceed with configuring a DHCP server. To configure the DHCP server for installing Virtuozzo over the network, open the `dhcpd.conf` file (usually, it is located in the `/etc` or `/etc/dhcp` directory) for editing and add the following strings to this file:

[subs="quotes"]
----
next-server _&lt;PXE_server_IP_address&gt;_;
filename "/pxelinux.0";
----

[NOTE]
[subs="quotes"]
====
*Note:* To configure a DHCP server for installation on EFI-based systems, specify `filename "/bootx64.efi"` instead of `filename "/pxelinux.0"` in the `dhcpd.conf` file (where `/bootx64.efi` is the directory to which you copied the EFI boot images when setting up the TFTP server).
====

Setting Up an HTTP Server
~~~~~~~~~~~~~~~~~~~~~~~~~

Now that you have set up the TFTP and DHCP servers, you need to make the Virtuozzo distribution files available for installation over the network. To do this:

. Set up an HTTP server. You can also use an existing HTTP server, if you have one.
. Copy the contents of your Virtuozzo installation DVD to some directory on the HTTP server (e.g., `/var/www/html/pcs`).
. On the PXE server, open the `/tftpboot/pxelinux.cfg/default` file for editing, and specify the path to the Virtuozzo installation files on the HTTP server.
+
[NOTE]
[subs="quotes"]
====
*Note:* For EFI-based systems, the file you need to edit has the name of `/tftpboot/pxelinux.cfg/efidefault` or +/tftpboot/pxelinux.cfg/__&lt;PXE_server_IP_address&gt;__+.
====
+
Assuming that you have the installation files in the `/var/www/html/pcs` directory on the HTTP server with the IP address of 198.123.123.198 and the `DocumentRoot` directory is set to `/var/www/html`, you can add the following option to the `append` line of the `default` file to make the Virtuozzo files accessible over HTTP:
+
[subs="quotes"]
----
method=http://198.123.123.198/pcs
----
+
So your default file should look similar to the following:
+
[subs="quotes"]
----
default menu.c32
prompt 0
timeout 100
ontimeout PCS
menu title Virtuozzo Boot Menu
label PCS
        menu label Install Virtuozzo Cloud Server
        kernel vmlinuz
        append initrd=initrd.img ksdevice=eth0 method=http://198.123.123.198/pcs
----

Configuring the Virtuozzo Server
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Before you can start the Virtuozzo installation, configure each server where you plan to install the product to boot from the network. To do this:

[options="compact"]
. Switch on the server.
. Enter the BIOS setup.
. Enable the network boot.

Installing Virtuozzo 7
----------------------

Now that you have prepared all the servers, you can start the Virtuozzo installation:

. Restart the Virtuozzo server after configuring its BIOS settings to boot from the network.
+
[NOTE]
[subs="quotes"]
====
*Note:* If you plan to perform an unattended installation of Virtuozzo, you need to additionally create a kickstart file. See <<_creating_a_kickstart_file>> for information about creating kickstart files and installing Virtuozzo with these files.
====

. Once the server boots, you see a dialog box asking you to select the system to install. So if you followed the example in <<_configuring_the_tftp_server>>, you see the following dialog:
+
image::images/psbmbootdialog.png[align="center"]
+
Select the entry for Virtuozzo (*Install Virtuozzo Cloud Server* in our case), and press *Enter*.

. Follow the on-screen instructions to install Virtuozzo. For details, consult the _Virtuozzo 7 Installation Guide_.

Creating a Kickstart File
-------------------------

If you plan to perform an unattended installation of Virtuozzo, you can use a kickstart file. A kickstart file is a simple text file containing the information used by the Virtuozzo installer to install and configure your physical server. The format of kickstart files used in Virtuozzo installations is similar to that used to perform an unattended installation of Red Hat Enterprise Linux (RHEL). To create a kickstart file, you can use your favorite text editor.

You can include in your Virtuozzo kickstart file two groups of options:

[options="compact"]
* The first group comprises the same options that you use when installing any RHEL-like distribution.
* The second group comprises the options specific to Virtuozzo.

Both groups of options are described in the following sections in detail.

Standard Kickstart Options
~~~~~~~~~~~~~~~~~~~~~~~~~~

Your kickstart file may include any of the standard Linux options used in kickstart files for installing Linux operating systems. For the full list of these options and their explanations, consult the respective Linux documentation (e.g., the _Red Hat Enterprise Linux Installation Guide_).

Listed below are the mandatory options and commands that you must include in each kickstart file:

[options="header",cols="1a,3a"]
|====
|Option|Description

|`auth`|Specifies authentication options for the Virtuozzo physical server. 
|`bootloader`|Specifies the way of installing the bootloader.
|`install`|Tells the system to install Virtuozzo either from `nfs` or `url` (for FTP and HTTP installations, respectively). Specify this option to perform a clean installation of Virtuozzo.
|`keyboard`|Sets the system keyboard type.
|`lang`|Sets the language to use during installation and the default language to use on the installed system.
|`part`|Creates partitions on the server.
|`rootpw`|Sets the system's root password.
|`timezone`|Sets the system time zone.
|`zerombr`|Cleans all partition tables on disk drives.

[NOTE]
[subs="quotes"]
====
*Note:* This option should follow clearpart `--all`.
====
|====

[NOTE]
[subs="quotes"]
====
*Notes:*

. You can specify the `cmdline` option to install Virtuozzo in a completely non-interactive command-line mode, without starting the X Window System.
. When installing Virtuozzo with Virtuozzo storage, you can use the `autopart` option to create the default partition layout and the default configuration for chunk servers and clients. To make a custom layout and configuration, use the `part` option and create the required partitions. You will then need to use the `pstorage` command to configure the partitions for chunk serves and clients. See <<_virtuozzo_kickstart_options>> for details.
====

Kickstart Options for Upgrading to Virtuozzo 7
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

When creating a kickstart file to use for upgrading existing installations of Virtuozzo Server Bare Metal to Virtuozzo 7, use the following options:

[options="compact"]
* `bootloader`
* `keyboard`
* `lang`
* `timezone`

You must also specify the `upgrade` option instead of `install` to tell the installer to upgrade the system rather than to perform a fresh installation of Virtuozzo 7.

Virtuozzo Kickstart Options
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Along with standard Linux options, Virtuozzo provides a number of specific parameters and keywords that you need to add to your kickstart file.

The table below lists all available parameters and keywords.

.General Parameters
[options="header",cols="1a,2a"]
|====
|Parameter|Description

|+key _&lt;key&gt;_+|Mandatory. Installs the Virtuozzo product key on the server. This key is needed to start using the Virtuozzo 7 software.
|+cep [--agree{brvbar}--disagree]+|Mandatory. Specify whether you want to participate in the Customer Experience Program.

[options="compact"]
* `--agree`. Join the program. In this case, Odin will periodically collect the information about the configuration of your physical server and virtual machines and containers and use it to make the product better fit your needs. No private information like your name, e-mail address, phone number, and keyboard input will be collected.
* `--disagree`. Do not join the program.
|`vznetcfg`|Optional. Invokes the `vznetcfg` utility with the specified options. This parameter accepts all options that you can normally pass to `vznetcfg`. The options and their values should be separated by an equals sign (for example, `vznetcfg --net=virt_network1:eth0`). For detailed information on the `vznecfg` options, refer to the *vznetcfg* section in the _Virtuozzo 7 Command Line Reference Guide_.
|`vziptables`|Deprecated. To configure iptables modules for containers, use the `NETFILTER` parameter in the container configuration file (for details, see the _Virtuozzo Command Line Reference Guide_).
|`vztturlmap`|Optional. Sets the URL of the repository and repository mirrors to use for handling EZ OS and application templates. By default, Virtuozzo uses the following URLs:

[options="compact"]
* `http://fedora.redhat.com` for handling Fedora-related templates.
* `http://mirror.centos.org` for handling CentOS-related templates.
* `http://archive.ubuntu.com` for handling Ubuntu-related templates.
* `http://download.opensuse.org` for handling openSUSE-related templates.
* `ftp://ftp.suse.com` for handling SUSE-related templates.
* `ftp://ftp.de.debian.org` for handling Debian-related templates.
* `http://vzdownload.swsoft.com` for obtaining specific software packages for the aforementioned Linux distributions. These packages are necessary for the correct operation of your OS templates.

To use your own URL, you first need to specify the name of the respective Linux distribution, followed by `=` and the desired URL (e.g., `$FC_SERVER=http://myrepository.com` to redefine the default repository for Fedora). To use several URLs, separate them by space.

[NOTE]
[subs="quotes"]
====
*Note:* Some Linux distributions (e.g., Red Hat Enterprise Linux and SUSE Linux Enterprise Server) do not have official repositories. So you should manually create software repositories before starting to use OS templates for such distributions. Refer to the _Virtuozzo 7 Templates Management Guide_ to learn how you can do it.
====

|`up2date`|Optional. Does the following:

[options="compact"]
. Configure the repositories with updates for Virtuozzo software and templates.
. Check the repositories for available updates.
. Download and install the updated packages, if any, on the server.

Using this option, you can ensure that you have the latest Virtuozzo software packages and templates right after the installation, without the need to manually check for updates.
|`nosfxtemplate`|Optional. Skips installing the pre-created and pre-cached EZ templates on the server. The current version of Virtuozzo is shipped with only one pre-created and pre-cached OS EZ template: `centos-6-x86_64`.
|`%eztemplates`|Optional. Installs EZ templates on the server. All available templates are listed in the `/Packages` directory of the Virtuozzo distribution. You can easily identify them by the +-ez-__&lt;number&gt;__.swsoft.noarch.rpm+ ending (e.g., `centos-6-x86-ez-3.0.0-14.swsoft.noarch.rpm`). The names of the templates must be specified without the ending and separated by the new-line character, for example:

[subs="quotes"]
----
%eztemplates
centos-6-x86
devel-centos-6-x86
----

When using this parameter, keep in mind the following:

* If you specify an empty list, no templates will be installed on the server.
* If you skip this parameter, all templates included in the Virtuozzo distribution will be installed on the server.
* You can indicate the `--cache` argument next to a respective OS template to cache it after installation. To cache all specified OS templates, specify `--cache` after `%eztemplates`.
+
[NOTE]
[subs="quotes"]
====
*Note:* To cache OS templates for some Linux distributions (e.g. Red Hat Enterprise Linux and SUSE Linux Enterprise Server), you should first create special repositories storing the necessary software packages for these OS templates. Refer to the _Virtuozzo 7 Templates Management Guide_ to learn how you can do it.
====
* This option must be specified as the first one after the keys.
|`ignoredisk`|Optional. Ignores the specified drives or all drives except the one specified. Used with one of the following arguments:

[options="compact"]
* +--drives=__&lt;drive&gt;__[,...]+ - A comma-separated list of drives to ignore. If a server has drives other than those specified in this option, the installer will ask what to do with them.
* +--only-use=__&lt;drive&gt;__+ - Ignore every drive except the specified.
|`pvaagent`|Optional. Downloads and installs the VA Agent and Power Panel components on the server. After doing so, you can register the server with the Virtual Automation application and to use this application to manage virtual machines and containers residing on it via a standard web browser. The VA Agent and Power Panel components are downloaded from the official repository.
|+pvamn --ip _&lt;IP_address&gt;_ [--hostname _&lt;hostname&gt;_] [--pswd _&lt;passwd&gt;_]+|Optional. Creates a special container on the server and install the PVA management server and Control Center components in the container. Once the container is created and the components are installed, the container starts acting as the Master Server, ensuring the communication between the server and Virtual Automation. The `pvamn` option is used with the following parameters:

[options="compact"]
* `--ip` (mandatory): the IP address to assign to the PVA management server.
* `--hostname` (optional): the hostname to assign to PVA management server.
* `--pswd` (mandatory for upgrade): the password to log in to the PVA management node. When upgrading your system, use this option only if you want to reinstall the management node; otherwise, skip this parameter.

If you use several parameters, separate them by spaces. For example:

[subs="quotes"]
----
pvamn --ip 10.10.10.10 --hostname hostname.com
----

Once the installation is complete, you can log in to Virtual Automation by opening +http://__&lt;IP_address_or_hostname&gt;__+ in the browser and using the `root` user name and the password you set as the value of the `rootpw` option (see <<_standard_kickstart_options>>). If you upgrade the system, use the `root` user name and the password specified after the `--pswd` parameter.

The PVA management node and Control Center components are downloaded from the official repository.

[NOTE]
[subs="quotes"]
====
*Note:* For more information on using Virtual Automation for managing servers with Virtuozzo, refer to the _Virtual Automation Administrator's Guide_.
====
|+prlnet [--ip-scope-start _&lt;start_IP_addr&gt;_ --ip-scope-end _&lt;end_IP_addr&gt;_] [--ip __&lt;adapter_IP_addr&gt;__[/__&lt;mask&gt;__]] [--dhcp-ip _&lt;DHCP_IP_addr&gt;_] --name _&lt;name&gt;_+|Optional. Defines the range of IP addresses the DHCP server will be able to allocate to virtual machines in host-only networks; virtual adapter IP address and subnet mask; DHCP server IP address; and virtual network name. If you omit one or more parameters, the following default values will be used:

[options="compact"]
* `--ip-scope-start`: 10.37.130.1,
* `--ip-scope-end`: 10.37.130.254,
* `--ip`: 10.37.130.2/255.255.255.0,
* `--dhcp-ip`: 10.37.130.1.
|`%packages`|Specifies the package groups to install on the server:

[options="compact"]
* `@base` and `@core` (mandatory). Installs the packages required for the correct operation of your system.
* `@vz` (mandatory). Installs the packages specific to the OS virtualization part of Virtuozzo.
* `@ps` (mandatory). Installs the packages specific to the hardware virtualization part of Virtuozzo.
* `@clustering` (optional). Installs the packages required for creating clusters from Virtuozzo systems.
* `@templates` (optional). Installs all templates included in the Virtuozzo distribution. If you want to install specific templates only, use the `%eztemplates` option.
* `@pstorage` (optional). Installs the packages required for setting up a Virtuozzo storage cluster and configuring the server as an MDS server, a chunk server, or a client. 
* `@optional` (optional). Installs additional packages that are not installed with Virtuozzo by default.
|====

.Parameters Specific to Virtuozzo storage
[options="header",cols="1,2a"]
|====
|Parameter|Description

|+pstorage mds_create _&lt;name&gt;_ --ip=__&lt;IP_address&gt;__+|Does the following:

[options="compact"]
* Creates a Virtuozzo storage cluster with the name of +_&lt;name&gt;_+. A name may contain the characters `a-z`, `A-Z`, `0-9` as well as minus (`-`) and underscore (`_`) signs.
* Configures the server as a metadata server for the Virtuozzo storage cluster and binds the MDS service to the IP address of +_&lt;IP_address&gt;_+.

Metadata servers are part of any Virtuozzo storage cluster. They store metadata about chunk servers, data chunks, and chunk replicas. You must set up at least one metadata server for a cluster to function.

[NOTE]
[subs="quotes"]
====
*Notes:* 

. MDS servers must have static IP addresses assigned. If you are using DHCP, you should map an IP address to the MAC address of the MDS server.
. For detailed information on deploying and managing Virtuozzo storage clusters, consult the _Virtuozzo storage Administrator's Guide_.
. The current version of Virtuozzo storage supports setting up one cluster per kickstart file. So when specifying several `pstorage` commands, make sure that all commands use the same cluster name.
====
|+pstorage clusterpw _&lt;passwd&gt;_+|Mandatory. Creates a new or supplies the existing password when creating or joining Virtuozzo storage clusters.

[NOTE]
[subs="quotes"]
====
*Note:* Keeping plain-text passwords in the kickstart file is a security risk if your network is not isolated. In this case, consider installing Virtuozzo first and configuring Virtuozzo storage clusters manually later.
====
|+pstorage mds_join _&lt;name&gt;_ --ip= __&lt;IP_address&gt;__+|Does the following:

[options="compact"]
* Configures the server as a metadata server for the Virtuozzo storage cluster with the name of +_&lt;name&gt;_+.
* Sets the IP address of +_&lt;IP_address&gt;_+ to connect to the metadata server.
|+pstorage reg_timeout _&lt;minutes&gt;_+|Sets the number of minutes during which MDS servers, chunk servers, and clients can try to register with the master MDS server and join the cluster. Every minute, one registration attempt is made. The default value is 0, which assumes that the master MDS server is already up and running.
|+pstorage cs_join _&lt;name&gt;_ [_&lt;options&gt;_]+|Configures the server as a chunk server for the Virtuozzo storage cluster with the name of +_&lt;name&gt;_+. You can use the following options with this command:

[options="compact"]
* +--mpoint=__&lt;mnt_point&lt;__+. Specify the mount point under which the chunk server is to be mounted on the server.
* +--ssd=__&lt;MNT_POINT&gt;__,__&lt;SIZE&gt;__+. Specify the mount point under which the SSD drive is to be mounted on the server.
* `--ssd=no`. Specify this option to forbid the use of SSD drives for write journaling.
* +--tier=__&lt;TIER&gt;__+. Specify the tier, from 0 to 3, defining the type of storage to use for storing data chunks. You can use tiers to keep different categories of data on different chunk servers.
* `--allow-system-disk`. Allow creating chunk servers on system disks. Have in mind that doing so may result in cluster performance degradation.

Do not use the options, except for `--ssd=no`, if you are creating the default partition layout and chunk server configuration using the `autopart` standard option.

Chunk servers store the contents of virtual machines and containers as 64MB data chunks. All data chunks are replicated, and their replicas are stored on different chunk servers. You must set up at least one chunk server for a cluster to function.
|+pstorage client _&lt;name&gt;_ [--ssd=__&lt;MNT_POINT&gt;__{brvbar}--ssd=no]+|Configures the server as a client for the Virtuozzo storage cluster with the name of +_&lt;name&gt;_+. You can use:

[options="compact"]
* the +--ssd=__&lt;MNT_POINT&gt;__+ option to manually specify the mount point under which the SSD drive is to be mounted on the server. Do not use this option if you are creating the default partition layout and chunk server configuration using the `autopart` standard option.
* the `--ssd=no` option to forbid the use of SSD drives for storing the local cache.

Clients are computers with Virtuozzo 7 from where you run virtual machines and containers stored on your Virtuozzo storage.

|+pstorage key _&lt;key&gt;_+|Optional. Installs the Virtuozzo storage product key on the server. This key is needed to start using the Virtuozzo storage functionality.
|====

Kickstart options for upgrading to Virtuozzo 7
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

You do not need to use any options specific to Virtuozzo in kickstart files to upgrade your system to Virtuozzo 7. You can, however, specify any of the options listed in the table above, if necessary. In this case, the specified options will redefine the ones in the original installation. For example, you can use the `--key` option to install a new license for Virtuozzo 7 on the server or the `--cep` option to cancel your participation in the Virtuozzo Customer Experience Program.

Kickstart File Example
~~~~~~~~~~~~~~~~~~~~~~

Below is an example of a kickstart file that you can use to install and configure Virtuozzo in unattended mode. You can use this file as the basis for creating your own kickstart files.

[subs="quotes"]
----
# Install Virtuozzo
install
# Uncomment the line below to install Virtuozzo in a completely unattended mode
# cmdline
# Use the path of http://example.com/pcs to get the installation files.
url --url http://example.com/pcs
# Use English as the language during the installation and as the default system
# language.
lang en_US.UTF-8
# Use the English keyboard type.
keyboard us
# Uncomment the line below to remove all partitions from the SDA hard drive and
# create these partitions: /boot, /, /vz, and swap.
# clearpart --drives=sda --all --initlabel
# zerombr
part /boot --fstype=ext4 --size=512
part / --fstype=ext4 --size=20096
part /vz --fstype=ext4 --size=40768 --grow
part swap --size=4000
# Use a DHCP server to obtain network configuration.
network --bootproto dhcp
# Set the root password for the server.
rootpw xxxxxxxxx
# Use the SHA-512 encryption for user passwords and enable shadow passwords.
auth --enableshadow --passalgo=sha512
# Set the system time zone to America/New York and the hardware clock to UTC.
timezone --utc America/New_York
# Set sda as the first drive in the BIOS boot order and write the boot record to
# mbr.
bootloader --location=mbr
# Tell the Virtuozzo installer to reboot the system after installation.
reboot
# Install the Virtuozzo license on the server.
key XXXXXX-XXXXXX-XXXXXX-XXXXXX-XXXXXX
# Create the virt_network1 Virtual Network on the server and associate it with the
# network adapter eth0.
vznetcfg --net=virt_network1:eth0
# Configure the ip_tables ipt_REJECT ipt_tos ipt_limit modules to be loaded in
# Containers.
# Use the http://myrepository.com to handle Fedora OS and application templates.
vztturlmap $FC_SERVER http://myrepository.com
# Install the listed EZ templates. Cache all OS templates after installation. Skip
# the installation of pre-created templates.
nosfxtemplate
%eztemplates --cache
centos-6-x86_64
centos-6-x86
mailman-centos-6-x86_64
mailman-centos-6-x86
# Install the packages for Virtuozzo on the server.
%packages
@base
@core
@vz
@ps
----

Kickstart file example for installing on EFI-based systems
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

You can use the file above to install Virtuozzo on BIOS-based systems. For installation on EFI-based systems, you need to modify the following places in the file (the changes are highlighted in bold):

[subs="quotes"]
----
# The following 4 commands are used to remove all partitions from the SDA hard
# drive and create these partitions: /boot/efi (required for EFI-based systems),
# /boot, /, /vz, and swap.
# clearpart --drives=sda --all --initlabel
*part /boot/efi --fstype=efi --grow --maxsize=200 --size=20*
part /boot --fstype=ext4 --size=512
part / --fstype=ext4 --size=20096
part /vz --fstype=ext4 --size=40768 --grow
part swap --size=4000
# Configure the bootloader.
*bootloader --location=partition*
----

Kickstart file example for upgrading to Virtuozzo 7
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Below is an example of a kickstart file you can use to upgrade your system to Virtuozzo 7.

[subs="quotes"]
----
# Upgrade to Virtuozzo rather than perform a fresh installation.
upgrade
# Use the path of http://example.com/pcs to get the installation files.
url --url http://example.com/pcs
# Use English as the language during the upgrade and as the default system
# language.
lang en_US.UTF-8
# Use the English keyboard type.
keyboard us
# Set the system time zone to America/New York and the hardware clock to UTC.
timezone --utc America/New_York
# Upgrade the bootloader configuration.
bootloader --upgrade
----

Copying the Kickstart File
~~~~~~~~~~~~~~~~~~~~~~~~~~

To install Virtuozzo using a kickstart file, you first need to make the kickstart file accessible over the network. To do this:

. Copy the kickstart file to the same directory on the HTTP server where the Virtuozzo installation files are stored (e.g., to `/var/www/html/pcs`).
. Add the following string to the `/tftpboot/pxelinux.cfg/default` file on the PXE server:
+
[subs="quotes"]
----
ks=__&lt;HTTP_server_address&gt;__/__&lt;path_to_kickstart_file&gt;__
----
+
[NOTE]
[subs="quotes"]
====
*Note:* For EFI-based systems, the file you need to edit has the name of `/tftpboot/pxelinux.cfg/efidefault` or +/tftpboot/pxelinux.cfg/__&lt;PXE_server_IP_address&gt;__+.
====

Assuming that the HTTP server has the IP address of 198.123.123.198, the DocumentRoot directory is set to `/var/www/html` and the full path to your kickstart file on this server is `/var/www/html/pcs/ks.cfg`, your `default` file may look like the following:

[subs="quotes"]
----
default menu.c32
prompt 0
timeout 100
ontimeout PCS
menu title Virtuozzo Boot Menu
label PCS
		menu label Install Virtuozzo Cloud Server
		kernel vmlinuz
		append initrd=initrd.img ks=http://198.123.123.198/pcs/ks.cfg
method=http://198.123.123.198/pcs ksdevice=eth0
----

Starting Installation
~~~~~~~~~~~~~~~~~~~~~

Now you can start installing Virtuozzo. To do this:

[options="compact"]
. Restart the server (see <<_configuring_the_virtuozzo_server>>).
. After the server boots, a dialog box is displayed asking you to select the system to install. So, if you used the example in <<_configuring_the_tftp_server>>, the following dialog window appears:
+
image::images/psbmbootdialog.png[align="center"]
+
Select the entry for Virtuozzo, and press *Enter*. The installation is launched automatically and proceeds without your interaction.
